<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CONTACT" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="CONTACT_MAIL" xml:space="preserve">
    <value>Mail</value>
  </data>
  <data name="CONTACT_NOK" xml:space="preserve">
    <value>Your message hasn't been sent, please retry and complete the captcha.</value>
  </data>
  <data name="CONTACT_OK" xml:space="preserve">
    <value>Your message has been sent !</value>
  </data>
  <data name="CONTACT_SEND" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="CONTACT_TXT" xml:space="preserve">
    <value>Your message</value>
  </data>
  <data name="CV_EN" xml:space="preserve">
    <value>CV (English)</value>
  </data>
  <data name="CV_FR" xml:space="preserve">
    <value>CV (French)</value>
  </data>
  <data name="META_DESC" xml:space="preserve">
    <value>Elanis: GameDev, Web Developer, and miscellaneous content maker</value>
  </data>
  <data name="META_KEY" xml:space="preserve">
    <value>elanis, developer, web, gmod, eap, stargate, galactae, dysnomia</value>
  </data>
  <data name="MY_PROJECTS_TITLE" xml:space="preserve">
    <value>My Projects</value>
  </data>
  <data name="OLD_PROJECTS" xml:space="preserve">
    <value>Old Projects (Inactive or stopped)</value>
  </data>
  <data name="PROJECTS_I_WORK_ON" xml:space="preserve">
    <value>Projects I contribute to</value>
  </data>
  <data name="PROJECTS_TCP_TITLE" xml:space="preserve">
    <value>TeamCP - Creators team</value>
  </data>
  <data name="PROJECT_COFOUNDER" xml:space="preserve">
    <value>Co-founder</value>
  </data>
  <data name="PROJECT_DEVELOPER" xml:space="preserve">
    <value>Developer</value>
  </data>
  <data name="PROJECT_GADDON" xml:space="preserve">
    <value>Garry's Mod Addon</value>
  </data>
  <data name="PROJECT_GAME" xml:space="preserve">
    <value>Game</value>
  </data>
  <data name="PROJECT_PREVIEW" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="PROJECT_WEBSITE" xml:space="preserve">
    <value>Website</value>
  </data>
  <data name="SKILLS_BACK_END" xml:space="preserve">
    <value>Web Back-end:</value>
  </data>
  <data name="SKILLS_DB" xml:space="preserve">
    <value>Databases</value>
  </data>
  <data name="SKILLS_FRONT_END" xml:space="preserve">
    <value>Web Front-end:</value>
  </data>
  <data name="SKILLS_OUT_WEB" xml:space="preserve">
    <value>Outside Web</value>
  </data>
  <data name="SKILLS_OW_JOKESREF" xml:space="preserve">
    <value>Jokes and movies references</value>
  </data>
  <data name="SKILLS_OW_LINUX" xml:space="preserve">
    <value>GNU/Linux clientside/serverside and shell</value>
  </data>
  <data name="SKILLS_OW_LUA" xml:space="preserve">
    <value>Lua - especially on Valve Source Engine</value>
  </data>
  <data name="SKILLS_TITLE" xml:space="preserve">
    <value>Skills</value>
  </data>
  <data name="SKILLS_TOOLS" xml:space="preserve">
    <value>Tools</value>
  </data>
  <data name="SKILLS_TOOLS_ADOBE" xml:space="preserve">
    <value>Adobe tools: especially Photoshop and Premiere Pro</value>
  </data>
  <data name="WELCOME_MESSAGE" xml:space="preserve">
    <value>Welcome on my portfolio !&lt;br/&gt;&lt;br/&gt;
My name is Axel aka Elanis, and this website presents you my projets and skills I learned in the past years. Most of these skills were learned by myself, and some while studying or in my jobs.&lt;br/&gt;
&lt;br/&gt;
I'm yyyy years old, I began "advanced" computing around 2011 and began to develop at the begining of 2014. Then I started a Bachelor-Master course in septembre 2016 and am now in a internship.&lt;br/&gt;
&lt;br/&gt;
Between this internship (my main activity), I'm also the founder of &lt;a href="https://dysnomia.studio"&gt;Dysnomia&lt;/a&gt; a company created to manage my biggest projects. More informations on this company at: &lt;a href="https://dysnomia.studio"&gt;https://dysnomia.studio&lt;/a&gt;.&lt;br /&gt;</value>
  </data>
</root>